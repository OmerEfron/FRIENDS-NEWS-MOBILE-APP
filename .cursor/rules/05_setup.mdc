---
description: 
globs: 
alwaysApply: false
---
# Development Setup and Dependencies

## Project Initialization
```bash
# Create Expo project
expo init frontend
cd frontend

# Install dependencies
npm install @react-navigation/native @react-navigation/bottom-tabs @react-navigation/stack
npm install react-native-safe-area-context react-native-screens
npm install @react-native-async-storage/async-storage
npm install react-native-vector-icons
npm install expo-image-picker expo-media-library
npm install react-native-reanimated
npm install axios
```

## Package.json Configuration
```json
{
  "name": "friendlines",
  "version": "1.0.0",
  "main": "node_modules/expo/AppEntry.js",
  "scripts": {
    "start": "expo start",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web",
    "lint": "eslint .",
    "test": "jest"
  },
  "dependencies": {
    "@react-navigation/bottom-tabs": "^6.5.x",
    "@react-navigation/native": "^6.1.x",
    "@react-navigation/stack": "^6.3.x",
    "@react-native-async-storage/async-storage": "^1.18.x",
    "axios": "^1.3.x",
    "expo": "~48.0.x",
    "expo-image-picker": "~14.1.x",
    "expo-media-library": "~15.2.x",
    "expo-status-bar": "~1.4.x",
    "react": "18.2.0",
    "react-native": "0.71.x",
    "react-native-reanimated": "~2.14.x",
    "react-native-safe-area-context": "4.5.x",
    "react-native-screens": "~3.20.x",
    "react-native-vector-icons": "^9.2.x"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0",
    "eslint": "^8.36.0",
    "eslint-config-universe": "^11.2.0",
    "jest": "^29.5.0",
    "prettier": "^2.8.7"
  },
  "private": true
}
```

## Environment Setup
```javascript
// .env.example
API_BASE_URL=https://api.friendlines.com
STORAGE_PREFIX=@friendlines
DEBUG_MODE=false
```

## ESLint Configuration
```javascript
// .eslintrc.js
module.exports = {
  extends: ['universe/native'],
  rules: {
    'prettier/prettier': 'error',
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn'
  }
}
```

## Babel Configuration
```javascript
// babel.config.js
module.exports = function(api) {
  api.cache(true);
  return {
    presets: ['babel-preset-expo'],
    plugins: [
      'react-native-reanimated/plugin'
    ]
  };
};
```

## Development Guidelines

### Code Organization
- Use feature-based folder structure
- Keep components small and focused
- Implement proper error boundaries
- Use custom hooks for shared logic
- Follow React Native best practices

### Testing Strategy
- Unit tests for utilities and hooks
- Component tests for UI elements
- Integration tests for main flows
- E2E tests for critical paths

### Performance Considerations
- Implement proper list virtualization
- Use memo and callbacks appropriately
- Optimize image loading and caching
- Monitor bundle size
- Profile render performance

### Security Measures
- Implement proper authentication flow
- Secure storage of sensitive data
- Input validation and sanitization
- API request/response encryption
- Regular security audits

### Deployment Process
1. Version bump
2. Run test suite
3. Generate production build
4. Deploy to stores
5. Monitor crash reports
